<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.dao.CompanyTalkGroupDao">
	
	<insert id="insertGroupMation" parameterType="java.util.Map">
	     INSERT into sys_talk_group 
	     (id, group_name, group_num, group_img, group_histroy_img, group_user_num, group_desc, state, create_id, create_time)
	     VALUES
	     (#{id}, #{groupName}, #{groupNum}, #{groupImg}, #{groupHistroyImg}, #{groupUserNum}, #{groupDesc}, #{state}, #{createId}, #{createTime})
	</insert>
	
	<insert id="insertGroupInviteMation" parameterType="java.util.Map">
	     insert into sys_talk_group_invite_mation
	     (id, invite_user_id, group_id, state, in_group_type, whether_read, create_id, create_time)
	     values
		<foreach collection="list" item="item" index="index" separator="," >  
			(#{item.id}, #{item.inviteUserId}, #{item.groupId}, #{item.state}, #{item.inGroupType}, '0', #{item.createId}, #{item.createTime})  
		</foreach>  
	</insert>
	
	<insert id="insertMakeGroupUserMation" parameterType="java.util.Map">
	     INSERT into sys_talk_group_user 
	     (id, user_id, group_id, create_time)
	     VALUES
	     (#{id}, #{userId}, #{groupId}, #{createTime})
	</insert>
	
	<select id="queryGroupInvitationMation" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			c.group_name groupName,
			a.state,
			a.in_group_type inGroupType,
			b.user_name userName,
			b.user_photo userPhoto,
			CONVERT(a.create_time, char) createTime
		FROM
			sys_talk_group_invite_mation a
			LEFT JOIN sys_eve_user_staff b ON a.create_id = b.user_id
			LEFT JOIN sys_talk_group c ON a.group_id = c.id
		WHERE a.invite_user_id = #{userId}
		ORDER BY a.create_time DESC
	</select>
	
	<select id="queryGroupInvitationMationById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.invite_user_id inviteUserId,
			a.state,
			a.in_group_type inGroupType,
			a.group_id groupId,
			a.create_id createId
		FROM
			sys_talk_group_invite_mation a
		WHERE a.id = #{id}
	</select>
	
	<update id="editAgreeInGroupInvitationMation" parameterType="java.util.Map">
		UPDATE sys_talk_group_invite_mation
		<set>
			`state` = '1',
			operator = #{userId},
			whether_read = '1'
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="editRefuseInGroupInvitationMation" parameterType="java.util.Map">
		UPDATE sys_talk_group_invite_mation
		<set>
			`state` = '2',
			operator = #{userId},
			whether_read = '1'
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryGroupMationByGroupId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.group_name groupName,
			a.group_img groupImg
		FROM
			sys_talk_group a
		WHERE a.id = #{groupId}
	</select>
	
	<select id="queryGroupMationList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.group_img groupImg,
			a.group_name groupName,
			a.group_user_num groupUserNum,
			a.group_desc groupDesc,
			COUNT(b.id) newGroupNum,
			(SELECT c.id FROM sys_talk_group_user c WHERE c.group_id = a.id AND c.user_id = #{userId}) inId
		FROM
			sys_talk_group a
			LEFT JOIN sys_talk_group_user b ON b.group_id = a.id
		WHERE a.group_num LIKE '%${groupNameOrNum}%'
		OR a.group_name LIKE '%${groupNameOrNum}%'
		GROUP BY a.id
	</select>
	
	<select id="queryInGroupByUserAndGroupId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			sys_talk_group_user a
		WHERE a.group_id = #{groupId}
		AND a.user_id = #{userId}
	</select>
	
	<select id="queryInGroupInviteByUserAndGroupId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			sys_talk_group_invite_mation a
		WHERE a.state = '0'
		AND a.create_id = #{userId}
		AND a.group_id = #{groupId}
	</select>
	
	<select id="queryCreateGroupUserByGroupId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.create_id createId,
			a.group_user_num groupUserNum,
			COUNT(b.id) newGroupNum
		FROM
			sys_talk_group a
			LEFT JOIN sys_talk_group_user b ON b.group_id = a.id
		WHERE a.id = #{groupId}
	</select>
	
	<insert id="insertInGroupInviteByUserAndGroupId" parameterType="java.util.Map">
	     insert into sys_talk_group_invite_mation
	     (id, invite_user_id, group_id, state, in_group_type, whether_read, create_id, create_time)
	     values
		(#{id}, #{inviteUserId}, #{groupId}, #{state}, #{inGroupType}, '0', #{createId}, #{createTime})  
	</insert>
	
	<select id="queryGroupCreaterById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			b.user_id id,
			b.user_name username,
			b.user_photo avatar,
			'暂无签名' sign
		FROM
			sys_talk_group a,
			sys_eve_user_staff b
		WHERE a.id = #{id}
		AND a.create_id = b.user_id
	</select>
	
	<select id="queryGroupMemberByGroupId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			c.user_id id,
			c.user_name username,
			c.user_photo avatar,
			'暂无签名' sign
		FROM
			sys_talk_group a,
			sys_talk_group_user b,
			sys_eve_user_staff c
		WHERE a.id = #{id}
		AND a.id = b.group_id
		AND b.user_id = c.user_id
	</select>
	
	<select id="queryGroupMemberByGroupIdAndNotThisUser" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			c.user_id id
		FROM
			sys_talk_group a,
			sys_talk_group_user b,
			sys_eve_user_staff c
		WHERE a.id = #{id}
		AND a.id = b.group_id
		AND b.user_id = c.user_id
		AND c.id != #{userId}
	</select>
	
	<insert id="insertPersonToPersonMessage" parameterType="java.util.Map">
	     INSERT into sys_talk_chat_history 
	     (id, send_id, receive_id, content, chat_type, create_time)
	     VALUES
	     (#{dataId}, #{fromId}, #{toId}, #{textMessage}, '1', #{createTime})
	</insert>
	
	<insert id="insertPersonToGroupMessage" parameterType="java.util.Map">
	     INSERT into sys_talk_chat_history 
	     (id, send_id, receive_id, content, chat_type, create_time)
	     VALUES
	     (#{dataId}, #{userId}, #{id}, #{textMessage}, '2', #{createTime})
	</insert>
	
	<select id="queryChatLogByPerToPer" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.send_id sendId,
			(SELECT b.user_name FROM sys_eve_user_staff b WHERE a.send_id = b.user_id) sendName,
			(SELECT b.user_name FROM sys_eve_user_staff b WHERE a.receive_id = b.user_id) receiveName,
			a.content,
			#{userId} userId,
			CONVERT(a.create_time, char) createTime
		FROM
			sys_talk_chat_history a
		WHERE ((a.send_id = #{userId} AND a.receive_id = #{receiveId})
		OR (a.send_id = #{receiveId} AND a.receive_id = #{userId}))
		AND a.chat_type = '1'
		ORDER BY a.create_time DESC
	</select>
	
	<select id="queryChatLogByPerToGroup" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.send_id sendId,
			(SELECT b.user_name FROM sys_eve_user_staff b WHERE a.send_id = b.user_id) sendName,
			(SELECT b.user_name FROM sys_eve_user_staff b WHERE a.receive_id = b.user_id) receiveName,
			a.content,
			#{userId} userId,
			CONVERT(a.create_time, char) createTime
		FROM
			sys_talk_chat_history a,
			sys_talk_group_user c
		WHERE a.send_id = #{userId} AND a.receive_id = #{receiveId}
		AND a.chat_type = '2'
		AND c.user_id = a.send_id
		AND a.create_time > c.create_time
		ORDER BY a.create_time DESC
	</select>
	
	<select id="queryGroupCreateIdById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.create_id createId
		FROM
			sys_talk_group a
		WHERE a.id = #{groupId}
	</select>
	
	<delete id="deleteUserToExitGroup" parameterType="java.util.Map">
		DELETE
		FROM
			sys_talk_group_user
		WHERE
			user_id = #{userId}
			AND group_id = #{groupId}
	</delete>
	
	<update id="editCreateToExitGroup" parameterType="java.util.Map">
		UPDATE sys_talk_group
		<set>
			`state` = '3',
		</set>
		WHERE id = #{groupId}
	</update>
	
	<select id="queryGroupStateById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.`state`
		FROM
			sys_talk_group a
		WHERE a.id = #{id}
	</select>
	
</mapper>